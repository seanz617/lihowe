#!/bin/bash
######################################
#author: hongwei Liu
#date: 2018-10.26
#desc: run application in docker and redirect stdout&stderr to log file
#parameters:
	#for all node
	#$1 application branch, such as master test dev...
	#$2 application name, such as gppio ppio miner indexer...
	#$3 gppio no. 
        #$4 for AB test: A: main;B: test 
######################################
	
if [[ $# < 2 ]];then
	echo "parameters error"
	exit 1
fi

export PATH=$PATH:/usr/lib/go/bin
export GOPATH=/home/workspace/go
export GOBIN=/home/workspace/go/bin
export PATH=$PATH:$GOPATH:$GOPATH/bin:$GOBIN

work_dir=/home/workspace
config_dir=/home/regnet-config
gppio_dir=go/src/github.com/PPIO/ppio-chain
go_enfi_dir=go/src/github.com/PPIO/go_enfi

ip=`ifconfig | grep 'inet 10.244.*.*' | grep -v '10.244.0.0' | awk '{print $2}'`
echo "host ip = $ip"

if [ $2 == 'gppio' ];then
	cd $work_dir/$gppio_dir

	echo 'starting gppio processes'

	echo 'start default'
	screen -dmS gppio.default ./gppio -c $config_dir/$1/$2$4/default.conf

	echo 'start normal'
	screen -dmS gppio.normal ./gppio -c $config_dir/$1/$2$4/normal.conf

	echo 'start miner.1'
	screen -dmS gppio.miner.1 ./gppio -c $config_dir/$1/$2$4/miner.1.conf

	echo 'start miner.2'
	screen -dmS gppio.miner.2 ./gppio -c $config_dir/$1/$2$4/miner.2.conf 

	echo 'start miner.3'
	screen -dmS gppio.miner.3 ./gppio -c $config_dir/$1/$2$4/miner.3.conf

	screen -ls
	top -b
fi

if [ $2 == 'bootstrap' ];then
	cd $work_dir/$go_enfi_dir
	
	cfg_file=$config_dir/$1/$2$3/$2.conf

	echo "starting $2$3 process"

	if [ ! -n "$4" ] ;then
		./cmd/$2/$2 daemon --rpchost=$ip --bindip=$ip --config=$cfg_file --daemon
	else
		./cmd/$2/$2 daemon --rpchost=$ip --bindip=$ip --config=$cfg_file --daemon
	fi		
fi

if [ $2 == 'center' ]; then
	cd $work_dir/$go_enfi_dir
	
	/etc/init.d/redis-server start

	cfg_file=$work_dir/regnet-config/$1/$2$3/$2.conf

	echo "reading $2$3 config"

	rpc_host=` awk '$1~/\[.*/{_cdr_par_=0}\
         	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*rpc_host *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	rpc_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*rpc_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	tcp_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*tcp_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	udp_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*udp_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`
	
	redis_host=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*redis_host *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	redis_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*redis_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	bind_ip=` awk '$1~/\[.*/{_cdr_par_=0}\
         	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*bind_ip *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	echo "rpc_host=$ip"
	echo "rpc_port=$rpc_port"
	echo "tcp_port=$tcp_port"
	echo "udp_port=$udp_port"
	echo "redis_host=$redis_host"
	echo "redis_port=$redis_port"
	echo "bind-ip=$ip"

	echo "starting $2$3 process"
	if [ ! -n "$4" ] ;then
		./$2 --rpchost=$ip --rpcport=$rpc_port --tcpport=$tcp_port --udpport=$udp_port --redishost=$redis_host --redisport=$redis_port --bindip=$ip --daemon
	else
		./$2 --rpchost=$ip --rpcport=$rpc_port --tcpport=$tcp_port --udpport=$udp_port --redishost=$redis_host --redisport=$redis_port --bindip=$ip --daemon --test=$4
	fi
fi

if [ $2 == 'verifier' ]; then
	cd $work_dir/$go_enfi_dir

	cfg_file=$config_dir/$1/$2$3/$2.conf

	echo "starting $2$3 process"

	echo "./$2 --rpchost=$ip --bindip=$ip --config=$cfg_file &> $work_dir/regnet-logs/$1/$2$3/logs </dev/null"
	if [ ! -n "$4" ] ;then
		./$2 --daemon --rpchost=$ip --bindip=$ip --config=$cfg_file </dev/null
	else
		./$2 --daemon --rpchost=$ip --bindip=$ip --config=$cfg_file --test=$4 </dev/null
	fi
fi

if [ $2 == 'indexer' ]; then
	cd $work_dir/$go_enfi_dir

	/etc/init.d/redis-server start

	cfg_file=$config_dir/$1/$2$3/$2.conf

	if [ ! -n "$4" ] ;then
		./indexer --bindip=$ip --rpchost=$ip --daemon --config=$work_dir/regnet-config/$1/$2$3/indexer.json </dev/null
	else
		./indexer --bindip=$ip --rpchost=$ip --daemon --config=$work_dir/regnet-config/$1/$2$3/indexer.json --test=$4 </dev/null
	fi
fi

if [ $2 == 'paymentproxy' ]; then
	cd $work_dir/$go_enfi_dir

	/etc/init.d/redis-server start

	cfg_file=$config_dir/$1/$2$3

	if [ ! -n "$4" ] ;then
		./$2 --conf=$cfg_file
	else
		./$2 --conf=$cfg_file --test=$4
	fi
fi

if [ $2 == 'gateway' ]; then
	/etc/init.d/redis-server start

	cfg_file=$config_dir/$1/$2$3/$2.conf

	gppio_host=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*gppio_host *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	gppio_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*gppio_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	rpc_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*rpc_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	tcp_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*tcp_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	udp_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*udp_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`
	
	payment_ip=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*payment_ip *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	payment_tcp_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*payment_tcp_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	payment_udp_port=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*payment_udp_port *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	payment_id=` awk '$1~/\[.*/{_cdr_par_=0}\
          	$0 ~ /^ *\[ *network *\]/ {_cdr_par_=1}\
         	$0~/^[\011 ]*payment_id *=.*/ { if(_cdr_par_==1) { sub("="," "); print $2; exit 0} }\
         	' ${cfg_file}`

	echo "gppio_host=$gppio_host"
	echo "gppio_port=$gppio_port"

	cd $work_dir/$go_enfi_dir
	
	if [ ! -n "$4" ] ;then
		./$2 --rpchost=$ip --bindip=$ip --rpcport=$rpc_port --tcpport=$tcp_port --udpport=$udp_port --paymentip=$payment_ip --paymenttcpport=$payment_tcp_port --paymentudpport=$payment_udp_port --nasnodeaddress=$gppio_host:$gppio_port --daemon
	else
		./$2 --rpchost=$ip --bindip=$ip --rpcport=$rpc_port --tcpport=$tcp_port --udpport=$udp_port --paymentip=$payment_ip --paymenttcpport=$payment_tcp_port --paymentudpport=$payment_udp_port --nasnodeaddress=$gppio_host:$gppio_port --daemon --test=$4
	fi
fi

if [ $2 == 'user' ]; then
	cd $work_dir/$go_enfi_dir

	if [ ! -n "$4" ] ;then
		./ppio --daemon --datadir=$config_dir/$1/$2$3
	else
		./ppio --daemon --datadir=$config_dir/$1/$2$3 --testnet=$4
	fi
fi

if [ $2 == 'miner' ]; then
	cd $work_dir/$go_enfi_dir

	if [ ! -n "$4" ] ;then
		./$2 --daemon --datadir=$config_dir/$1/$2$3 </dev/null
	else
		./$2 --daemon --datadir=$config_dir/$1/$2$3 --testnet=$4 </dev/null
	fi
fi

if [ $2 == 'jenkins' ]; then
	/etc/init.d/ssh start	
	top -b
fi
